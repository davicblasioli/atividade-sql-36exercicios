/* Atividade 1 */
UPDATE DEBITOS d
SET SITUACAO_DEBITO = 'Atrasado'
WHERE DATAVENCIMENTO < CURRENT_DATE
AND SITUACAO_DEBITO NOT IN ('Negociado', 'Pago');

SELECT * FROM DEBITOS d 
WHERE DATAVENCIMENTO < CURRENT_DATE
AND SITUACAO_DEBITO NOT IN ('Negociado', 'Pago');


/* Atividade 2 */
UPDATE DEBITOS d
SET SITUACAO_DEBITO = 'Pendente'
WHERE DATAVENCIMENTO > CURRENT_DATE
AND SITUACAO_DEBITO NOT IN ('Pago');

SELECT * FROM DEBITOS d 
WHERE DATAVENCIMENTO > CURRENT_DATE
AND SITUACAO_DEBITO NOT IN ('Pago');


/* Atividade 3 */
UPDATE DEBITOS d
SET DATAVENCIMENTO = DATEADD(-5 YEAR TO DATAVENCIMENTO) 
WHERE SITUACAO_DEBITO IN ('Negociado');

SELECT * FROM DEBITOS d 
WHERE SITUACAO_DEBITO IN ('Negociado');

/* Atividade 4 */
SELECT p.NOME, p.EMAIL, p.TELEFONE FROM PESSOA p 

/* Atividade 5 */
SELECT * FROM PRODUTO p 
WHERE PRECO_UNITARIO > 100

/* Atividade 6 */
SELECT * FROM VENDA v 
WHERE v.DATA_VENDA BETWEEN '2019-02-15' AND '2024-02-15'

/* Atividade 7 */
SELECT p.NOME, p.DATA_NASCIMENTO, (CURRENT_DATE - p.DATA_NASCIMENTO)/365 FROM FORNECEDOR f 
LEFT JOIN PESSOA p ON p.ID_PESSOA = f.ID_FORNECEDOR 
WHERE f.ID_FORNECEDOR IN (SELECT ID_FORNECEDOR FROM PRODUTO p2 WHERE quantidade_estoque IS NULL)

/* Atividade 8 */
SELECT PESSOA.NOME FROM DEBITOS
INNER JOIN CLIENTE ON CLIENTE.ID_CLIENTE = DEBITOS.ID_CLIENTE
INNER JOIN PESSOA ON PESSOA.ID_PESSOA = CLIENTE.ID_PESSOA
WHERE DEBITOS.SITUACAO_DEBITO = 'Atrasado'

/* Atividade 10 */
SELECT FIRST 10 CLIENTE.ID_CLIENTE, PESSOA.NOME, EXTRACT(YEAR FROM CURRENT_DATE) - EXTRACT(YEAR FROM PESSOA.DATA_NASCIMENTO) AS IDADE
, COALESCE((SELECT SUM(DEBITOS.VALOR_TOTAL) FROM DEBITOS
WHERE DEBITOS.ID_CLIENTE = CLIENTE.ID_CLIENTE
AND DEBITOS.DATAVENCIMENTO < CURRENT_DATE
AND DEBITOS.SITUACAO_DEBITO IN ('Atrasado', 'Pendente')),0) AS DEBITO_PENDENTE
, (SELECT SUM(DEBITOS.VALOR_TOTAL) FROM DEBITOS
WHERE DEBITOS.ID_CLIENTE = CLIENTE.ID_CLIENTE
AND SITUACAO_DEBITO = 'Pago') AS DEBITO_PAGO FROM PESSOA
INNER JOIN CLIENTE ON CLIENTE.ID_PESSOA = PESSOA.ID_PESSOA
ORDER BY 4 DESC

/* Atividade 11 */
UPDATE PRODUTO p 
SET PRECO_UNITARIO = PRECO_UNITARIO + (PRECO_UNITARIO * 0.10)
WHERE p.QUANTIDADE_ESTOQUE < 10

SELECT * FROM PRODUTO p 
WHERE p.QUANTIDADE_ESTOQUE < 10

/* Atividade 12 */
SELECT * FROM VENDA v 
WHERE DATA_VENDA < '2024-01-01'

/* Atividade 13 */
UPDATE DEBITOS d 
SET SITUACAO_DEBITO = 'Pago'
WHERE SITUACAO_DEBITO NOT IN ('Atrasado');

SELECT * FROM PAGAMENTO p, DEBITOS d 
WHERE p.ID_DEBITO = d.ID_DEBITO 

/* Atividade 15 */
SELECT * FROM VENDA v 
WHERE v.DATA_VENDA BETWEEN '2023-12-01' AND '2024-01-01'

/* Atividade 16 */
SELECT * FROM PRODUTO p 
WHERE p.QUANTIDADE_ESTOQUE BETWEEN 5 AND 20

/* Atividade 17 */
SELECT * FROM PESSOA p 
WHERE p.NOME LIKE 'A%'

/* Atividade 18 */
SELECT * FROM PRODUTO p 
LEFT JOIN ITENSVENDA i ON p.ID_PRODUTO = i.id_venda
WHERE i.ID_venda IS NULL 

/* Atividade 19 */
SELECT * FROM HISTORICO_COMPRAS_CLIENTE hcc 
WHERE ID_CLIENTE IN (SELECT ID_CLIENTE FROM CLIENTE c
WHERE c.id_pessoa IN (SELECT ID_CLIENTE FROM PESSOA p
WHERE p.nome = 'Carla Souza' OR p.nome = 'Larissa Ferreira'))

/* Atividade 20 */
SELECT * FROM PESSOA p 
WHERE p.ID_PESSOA IN (SELECT ID_PESSOA FROM CLIENTE c WHERE c.ID_PESSOA IS NOT NULL) OR
p.ID_PESSOA IN (SELECT ID_PESSOA FROM FORNECEDOR f WHERE f.ID_PESSOA IS NOT NULL)

/* Atividade 21 */
SELECT * FROM VENDA v 
LEFT JOIN pessoa p ON p.ID_PESSOA = v.ID_PESSOA 
LEFT JOIN PAGAMENTO p2 ON p2.ID_FORMA_PAGAMENTO = v.ID_FORMA_PAGAMENTO 

/* Atividade 22 */
SELECT V.*, IV.*, P.*
FROM VENDA V
INNER JOIN ITENSVENDA IV ON V.ID_VENDA = IV.ID_VENDA
INNER JOIN PRODUTO P ON IV.ID_PRODUTO = P.ID_PRODUTO
WHERE P.NOME = 'Placa de Captura';

/* Atividade 23 */
SELECT p.NOME, (CURRENT_DATE - DATA_NASCIMENTO)/365 + 1 AS idade2025 FROM PESSOA p 
WHERE p.ID_PESSOA IN (SELECT ID_PESSOA FROM CLIENTE c WHERE c.ID_PESSOA IS NOT NULL) OR
p.ID_PESSOA IN (SELECT ID_PESSOA FROM FORNECEDOR f WHERE f.ID_PESSOA IS NOT NULL)

/* Atividade 24 */
SELECT l.NOME AS Logradouro, b.NOME AS Bairro, (SELECT COUNT(*) FROM ENDERECO e WHERE e.id_logradouro = l.id_logradouro)
AS pertence FROM LOGRADOURO l, BAIRRO b 
WHERE l.id_bairro = b.id_bairro

/* Ativida 25 */
SELECT p.ID_PRODUTO, p.NOME, p.PRECO_UNITARIO FROM PRODUTO p 
WHERE p.PRECO_UNITARIO > (SELECT AVG(p.PRECO_UNITARIO) FROM PRODUTO p) 

/* Atividade 26 */
SELECT DISTINCT c.* FROM CLIENTE c 
LEFT JOIN ENDERECO e ON c.ID_CLIENTE = e.ID_ENDERECO 
LEFT JOIN MUNICIPIO m ON e.ID_MUNICIPIO = m.ID_MUNICIPIO 
WHERE m.POPULACAO > 1000000

/* Atividade 27 */
SELECT F.ID_FORNECEDOR, P.NOME AS NOME_FORNECEDOR, SUM(IV.QUANTIDADE) AS TOTAL_PRODUTOS_VENDIDOS FROM FORNECEDOR F
INNER JOIN PRODUTO P ON F.ID_FORNECEDOR = P.ID_FORNECEDOR
INNER JOIN ITENSVENDA IV ON P.ID_PRODUTO = IV.ID_PRODUTO
GROUP BY F.ID_FORNECEDOR, P.NOME;

/* Atividade 28 */
SELECT p.NOME, v.VALOR_TOTAL FROM VENDA v 
LEFT JOIN PESSOA p ON v.ID_PESSOA = p.ID_PESSOA 
WHERE v.valor_total > 500

/* Atividade 29 */
SELECT * FROM PESSOA p 
INNER JOIN ENDERECO e ON p.ID_PESSOA = e.ID_PESSOA 

/* Atividade 30 */
SELECT p.NOME, p.PRECO_UNITARIO, p.nome FROM PRODUTO p 
LEFT JOIN FORNECEDOR f ON 

/* Atividade 31 */
SELECT * FROM PRODUTO p 
ORDER BY QUANTIDADE_ESTOQUE DESC 

/* Atividade 32 */
SELECT * FROM VENDA v 
ORDER BY VALOR_TOTAL ASC

/* Atividade 33 */
SELECT p.NOME, p.QUANTIDADE_ESTOQUE FROM PRODUTO p
WHERE p.QUANTIDADE_ESTOQUE < (SELECT AVG(QUANTIDADE_ESTOQUE) FROM PRODUTO)

/* Atividade 34 */
SELECT DISTINCT p.* FROM PESSOA p 
INNER JOIN pessoa p2 ON p.TELEFONE = p2.TELEFONE 
WHERE p.ID_PESSOA <> p2.ID_PESSOA 
ORDER BY TELEFONE ASC 

/* Atividade 35 */
UPDATE PRODUTO p SET p.PRECO_UNITARIO = p.PRECO_UNITARIO + p.PRECO_UNITARIO * 0.10
WHERE p.ID_FORNECEDOR IN (SELECT f.id_fornecedor FROM FORNECEDOR f
INNER JOIN PESSOA pe ON f.id_pessoa = pe.id_pessoa
INNER JOIN ENDERECO e ON pe.id_pessoa = e.id_pessoa
INNER JOIN MUNICIPIO m ON e.id_municipio = m.id_municipio
WHERE m.uf = 'SP')

/* Atividade 36 */
SELECT p.nome, d.situacao_debito FROM DEBITOS d 
INNER JOIN CLIENTE c ON c.ID_CLIENTE = d.ID_CLIENTE 
INNER JOIN PESSOA p ON p.ID_PESSOA = c.ID_PESSOA 
WHERE d.SITUACAO_DEBITO = ('Negociado')